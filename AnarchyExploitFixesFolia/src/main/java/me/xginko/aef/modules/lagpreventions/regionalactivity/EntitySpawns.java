package me.xginko.aef.modules.lagpreventions.regionalactivity;

import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.entity.EntitySpawnEvent;

public class EntitySpawns extends RegionalActivityModule {

    private final int limit;

    public EntitySpawns() {
        super(
                "entity-spawn",
                true,
                1500.0,
                18000,
                20000,
                10.0,
                120.0
        );
        this.config.addComment(configPath+".enable", """
                Limits entity spawning activity within a configurable radius and timeframe\s
                to help reduce lag by cancelling high activity hotspots.\s
                \s
                Examples:\s
                \s
                - A redstone current changes.\s
                - A redstone block gets powered on.\s
                - A redstone block gets powered off.""");
        this.limit = config.getInt(configPath + ".spawn-event-limit", 6000,
                "Maximum number of entity spawns within configured timeframe.");
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onCreatureSpawn(EntitySpawnEvent event) {
        if (isCriticallyLagging()) {
            event.setCancelled(true);
            onLagExceeded(event);
            return;
        }

        RegionData regionData = getRegionData(event.getLocation());

        if (regionData.resumeTime.get() > System.currentTimeMillis()) {
            event.setCancelled(true);
            return;
        }

        if (regionData.activityCount.incrementAndGet() > limit) {
            event.setCancelled(true);
            onLimitExceeded(event.getLocation(), regionData, limit);
        }
    }
}
