package me.xginko.aef.modules.lagpreventions.physics;

import org.bukkit.Location;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.BlockFormEvent;

public class BlockFormOrGrow extends PhysicsModule {

    private final int limit;

    public BlockFormOrGrow() {
        super("block-spread");
        this.limit = config.getInt(configPath + ".block-form-event-limit", 500,
                "Maximum number of times a block can form due to natural causes like\n" +
                        "Snow storms, mushrooms growing or cobblestone forming due to water and lava\n" +
                        "within the configured timeframe before they will be paused.");
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockForm(BlockFormEvent event) {
        if (isCriticallyLagging()) {
            event.setCancelled(true);
            onLagExceeded(event);
            return;
        }

        Location location = event.getBlock().getLocation();
        RegionData regionData = getRegionData(location);

        if (System.currentTimeMillis() < regionData.resumeTime.get()) {
            event.setCancelled(true);
            if (regionData.count.get() != 0)
                regionData.count.set(0); // Reset count when region is cooling down
            return;
        }

        if (regionData.count.incrementAndGet() > limit) {
            event.setCancelled(true);
            onLimitExceeded(event, location, limit, regionData);
        }
    }
}
