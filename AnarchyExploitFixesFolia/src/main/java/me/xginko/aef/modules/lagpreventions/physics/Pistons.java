package me.xginko.aef.modules.lagpreventions.physics;

import org.bukkit.Location;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.BlockPistonEvent;

public class Pistons extends PhysicsModule {

    private final int limit;

    public Pistons() {
        super("pistons");
        this.config.addComment(configPath,
                "Limits piston movement within a configurable radius and timeframe\n" +
                        "to help reduce lag by cancelling high activity hotspots.\n" +
                        "\n" +
                        "Examples:\n" +
                        "\n" +
                        "- A piston extends." +
                        "- A piston retracts.");
        this.limit = config.getInt(configPath + ".piston-movement-limit", 300,
                "Maximum number of piston extend and/or retracts within the\n" +
                        "configured timeframe.");
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPistonMove(BlockPistonEvent event) {
        if (isCriticallyLagging()) {
            event.setCancelled(true);
            onLagExceeded(event);
            return;
        }

        Location location = event.getBlock().getLocation();
        RegionData regionData = getRegionData(location);

        if (System.currentTimeMillis() < regionData.resumeTime.get()) {
            event.setCancelled(true);
            return;
        }

        if (regionData.activityCount.incrementAndGet() > limit) {
            event.setCancelled(true);
            onLimitExceeded(location, regionData, limit);
        }
    }
}
