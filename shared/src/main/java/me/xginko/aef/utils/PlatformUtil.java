package me.xginko.aef.utils;

import org.bukkit.Bukkit;

import java.util.Locale;
import java.util.regex.MatchResult;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class PlatformUtil {

    private static int minecraftVersion, minecraftPatchVersion, minecraftPreReleaseVersion, minecraftReleaseCandidateVersion;
    private static boolean isServerPaper, isServerFolia, isServerPurpur;

    public static void load() {
        isServerPurpur
                =   hasClass("org.purpurmc.purpur.PurpurConfig");
        isServerPaper
                =   hasClass("com.destroystokyo.paper.PaperConfig")
                ||  hasClass("io.papermc.paper.configuration.Configuration");
        isServerFolia
                =   hasClass("io.papermc.paper.threadedregions.RegionizedServer")
                &&  hasClass("io.papermc.paper.threadedregions.ThreadedRegionizer")
                &&  hasClass("io.papermc.paper.threadedregions.TickRegionScheduler")
                &&  hasClass("io.papermc.paper.threadedregions.TickRegions");

        // From PaperLib
        Matcher matcher = Pattern.compile("(?i)\\(MC: (\\d)\\.(\\d+)\\.?(\\d+?)?(?: (Pre-Release|Release Candidate) )?(\\d)?\\)")
                .matcher(Bukkit.getVersion());
        if (matcher.find()) {
            MatchResult matchResult = matcher.toMatchResult();

            try {
                minecraftVersion = Integer.parseInt(matchResult.group(2), 10);
            } catch (Exception ignored) {}

            if (matchResult.groupCount() >= 3) {
                try {
                    minecraftPatchVersion = Integer.parseInt(matchResult.group(3), 10);
                } catch (Exception ignored) {}
            }

            if (matchResult.groupCount() >= 5) {
                try {
                    int ver = Integer.parseInt(matcher.group(5));
                    if (matcher.group(4).toLowerCase(Locale.ENGLISH).contains("pre")) {
                        minecraftPreReleaseVersion = ver;
                    } else {
                        minecraftReleaseCandidateVersion = ver;
                    }
                } catch (Exception ignored) {}
            }
        }
    }

    private static boolean hasClass(String className) {
        try {
            Class.forName(className);
            return true;
        } catch (ClassNotFoundException e) {
            return false;
        }
    }

    public static boolean isPaper() {
        return isServerPaper;
    }

    public static boolean isFolia() {
        return isServerFolia;
    }

    public static boolean isPurpur() {
        return isServerPurpur;
    }

    public static int getMinecraftVersion() {
        return minecraftVersion;
    }

    public static int getMinecraftPatchVersion() {
        return minecraftPatchVersion;
    }

    public static int getMinecraftPreReleaseVersion() {
        return minecraftPreReleaseVersion;
    }

    public static int getMinecraftReleaseCandidateVersion() {
        return minecraftReleaseCandidateVersion;
    }
}
