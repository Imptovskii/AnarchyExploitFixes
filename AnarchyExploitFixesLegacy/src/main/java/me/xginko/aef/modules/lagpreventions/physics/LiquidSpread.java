package me.xginko.aef.modules.lagpreventions.physics;

import com.cryptomorin.xseries.XMaterial;
import org.bukkit.Location;
import org.bukkit.block.Block;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.block.BlockFromToEvent;

public class LiquidSpread extends PhysicsModule {

    private final int limit;

    public LiquidSpread() {
        super("liquid-spread");
        this.config.addComment(configPath,
                "Limits liquid spreading within a configurable radius and timeframe\n" +
                        "to help reduce lag by cancelling high activity hotspots.\n" +
                        "\n" +
                        "Examples:\n" +
                        "\n" +
                        "- A lava block spreading by flowing." +
                        "- A water block spreading by flowing.");
        this.limit = config.getInt(configPath + ".liquid-spread-event-limit", 1300,
                "Maximum number of times liquids are allowed to spread within the configured\n" +
                        "timeframe before they will be put on cooldown.");
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockFromTo(BlockFromToEvent event) {
        if (isCriticallyLagging()) {
            event.setCancelled(true);
            onLagExceeded(event);
            return;
        }

        Block block = event.getBlock();
        if (block.getType() == XMaterial.DRAGON_EGG.parseMaterial()) return; // Event fires only for liquids and the dragon egg

        Location location = block.getLocation();
        RegionData regionData = getRegionData(location);

        if (System.currentTimeMillis() < regionData.resumeTime.get()) {
            event.setCancelled(true);
            return;
        }

        if (regionData.activityCount.incrementAndGet() > limit) {
            event.setCancelled(true);
            onLimitExceeded(location, regionData, limit);
        }
    }
}
